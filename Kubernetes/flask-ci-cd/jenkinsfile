pipeline {
    agent any
    //environment {
        //KUBECONFIG = credentials('jenkins_config_default')
        // KUBERNETES_SERVICE_HOST = 'kubernetes.default.svc'
        // KUBERNETES_SERVICE_PORT = '443'
    //}
    stages {
        stage('Clone Code') {
            steps {
                git url: 'https://github.com/PavanThumati/Training.git', branch: 'main'
            }
        }
        stage('Build Docker Image') {
            steps {
                sh 'docker build -f Kubernetes/flask-ci-cd/Dockerfile -t pavanthumati/flask-ci-cd:latest .'
            }
        }
        stage('Push to Docker Hub') {
            steps {
                withDockerRegistry([credentialsId: 'DockerHubCredentials', url: 'https://index.docker.io/v1/']) {
                    sh 'docker push pavanthumati/flask-ci-cd:latest'
                }
            }
        }

//
//
        stage('Deploy to Kubernetes sample') {
            steps {
                script {
                    // Use the withCredentials block to securely access the kubeconfig
                    withCredentials([file(credentialsId: 'jenkins_kubeconfig', variable: 'KUBECONFIG_FILE')]) {
                        // Set KUBECONFIG environment variable to the file provided by withCredentials
                        sh 'export KUBECONFIG=$KUBECONFIG_FILE'

                        // Run kubectl commands using the provided kubeconfig
                        sh 'kubectl get pods'
                    }
                }
            }
}
//
//
//
        stage('Deploy to Kubernetes') {
            steps {
                sh 'kubectl apply -f Kubernetes/flask-ci-cd/k8s-deployment.yaml --validate=false'
            }
        }
    }
}
