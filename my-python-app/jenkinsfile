pipeline {
    agent any

    environment {
        VIRTUAL_ENV = 'venv'
    }

    stages {
        stage('Clone Repository') {
            steps {
                // Make sure to use the correct branch name (main, if that's your default branch)
                git branch: 'main', url: 'https://github.com/PavanThumati/jenkins-Training.git'
            }
        }

        stage('Set up Virtual Environment') {
            steps {
                sh 'python3 -m venv $VIRTUAL_ENV'
                sh './$VIRTUAL_ENV/bin/pip install --upgrade pip' // Upgrade pip
            }
        }

        stage('Install Dependencies') {
            steps {
                sh './$VIRTUAL_ENV/bin/pip install -r requirements.txt'
            }
        }

        stage('Run Tests') {
            steps {
                // Run your tests using pytest (or another testing framework if needed)
                sh './$VIRTUAL_ENV/bin/pytest tests/'
            }
        }

        stage('Build Artifact') {
            steps {
                // Build the Python package (source distribution)
                sh './$VIRTUAL_ENV/bin/python setup.py sdist'
            }
        }

        stage('Archive Artifact') {
            steps {
                // Archive the generated artifacts (e.g., tar.gz files in dist/)
                archiveArtifacts artifacts: 'dist/*.tar.gz', fingerprint: true
            }
        }
    }

    post {
        always {
            // Clean up the virtual environment after the job is done
            sh 'rm -rf $VIRTUAL_ENV'
        }
    }
}
